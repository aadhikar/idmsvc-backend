' https://pdf.plantuml.net/PlantUML_Language_Reference_Guide_en.pdf
@startuml
skinparam handwritten true

actor Administrator as Administrator
participant "Ipa Server" as ipa_server
participant "idm-domains-backend" as hmsidm_backend



group Create Domain from UI
Administrator -> hmsidm_backend: (1) (https) POST /api/hmsidm/v1/domains
note left hmsidm_backend
X-Rh-Identity: eyJhY2NvdW50X251bWJlciI6IjExMTExIiwib3JnX2lkIjoiMTExMTEiLCJ1c2VyIjp7InVzZXJuYW1lIjoidGVzdHVzZXIifX0K
X-Rh-Insights-Request-Id: kjasdf01

{
  "domain_name": "mydomain.example",
  "domain_type": "ipa",
  "auto_enrollment_enabled": true,
  "ipa": {
    "realm_name": "IPA.EXAMPLE",
    "ca_certs": [],
    "servers": [],
    "realm_domains": []
  }
}
end note

hmsidm_backend -> rbac: (http) GET /api/rbac/v1/access/?application=hmsidm&offset=0&limit=100
hmsidm_backend <-- rbac: (http) ACL list for the current user
note left rbac
The communication between services will be encrypted by TLS in a near future
See: ADR-18 at https://issues.redhat.com/browse/ADR-18
end note

alt domain created
Administrator <-- hmsidm_backend: (https) 201 Created
note right Administrator
{
  "domain_uuid": "1aa15eae-a88b-11ed-a2cb-482ae3863d30",
  "domain_name": "mydomain.example",
  "domain_type": "ipa",
  "auto_enrollment_enabled": true,
  "ipa": {
    "realm_name": "MYDOMAIN.EXAMPLE",
    "token": "Iesah0IengaeFah6Cienai4tooph5Eiv",
    "token_expiration": "2023-03-08T15:50:45",
    "ca_certs": [],
    "servers": [],
    "realm_domains": []
  },
}
end note
note right Administrator
Execute the command below into your ipa server:
$ ipa-hcc register 1aa15eae-a88b-11ed-a2cb-482ae3863d30 Iesah0IengaeFah6Cienai4tooph5Eiv
end note
else user not authorized
Administrator <-- hmsidm_backend: (https) 404 Not Found (401 Unauthorized)
end alt
end group



group Populate domains data from IPA Server
Administrator -> ipa_server: (cmd) ipa-hcc register 1aa15eae-a88b-11ed-a2cb-482ae3863d30 Iesah0IengaeFah6Cienai4tooph5Eiv
ipa_server -> hmsidm_backend: (https) PATCH /api/hmsidm/v1/domains/1aa15eae-a88b-11ed-a2cb-482ae3863d30/ipa
note left hmsidm_backend
Here it is used an X-Rh-Identity header resulting
from the certificate issued for the host by RHSM.
end note
note left hmsidm_backend
X-Rh-Identity: ewogICJlbnRpdGxlbWVudHMiOiB7CiAgICAiYW5zaWJsZSI6IHsKICAgICAgImlzX2VudGl0bGVk
IjogdHJ1ZSwKICAgICAgImlzX3RyaWFsIjogZmFsc2UKICAgIH0sCiAgICAiY29zdF9tYW5hZ2Vt
ZW50IjogewogICAgICAiaXNfZW50aXRsZWQiOiB0cnVlLAogICAgICAiaXNfdHJpYWwiOiBmYWxz
ZQogICAgfSwKICAgICJpbnNpZ2h0cyI6IHsKICAgICAgImlzX2VudGl0bGVkIjogdHJ1ZSwKICAg
ICAgImlzX3RyaWFsIjogZmFsc2UKICAgIH0sCiAgICAiaW50ZXJuYWwiOiB7CiAgICAgICJpc19l
bnRpdGxlZCI6IGZhbHNlLAogICAgICAiaXNfdHJpYWwiOiBmYWxzZQogICAgfSwKICAgICJtaWdy
YXRpb25zIjogewogICAgICAiaXNfZW50aXRsZWQiOiB0cnVlLAogICAgICAiaXNfdHJpYWwiOiBm
YWxzZQogICAgfSwKICAgICJvcGVuc2hpZnQiOiB7CiAgICAgICJpc19lbnRpdGxlZCI6IHRydWUs
CiAgICAgICJpc190cmlhbCI6IGZhbHNlCiAgICB9LAogICAgInJoZWwiOiB7CiAgICAgICJpc19l
bnRpdGxlZCI6IHRydWUsCiAgICAgICJpc190cmlhbCI6IGZhbHNlCiAgICB9LAogICAgInJob2Ft
IjogewogICAgICAiaXNfZW50aXRsZWQiOiBmYWxzZSwKICAgICAgImlzX3RyaWFsIjogZmFsc2UK
ICAgIH0sCiAgICAicmhvZHMiOiB7CiAgICAgICJpc19lbnRpdGxlZCI6IGZhbHNlLAogICAgICAi
aXNfdHJpYWwiOiBmYWxzZQogICAgfSwKICAgICJyaG9zYWsiOiB7CiAgICAgICJpc19lbnRpdGxl
ZCI6IGZhbHNlLAogICAgICAiaXNfdHJpYWwiOiBmYWxzZQogICAgfSwKICAgICJzZXR0aW5ncyI6
IHsKICAgICAgImlzX2VudGl0bGVkIjogdHJ1ZSwKICAgICAgImlzX3RyaWFsIjogZmFsc2UKICAg
IH0sCiAgICAic21hcnRfbWFuYWdlbWVudCI6IHsKICAgICAgImlzX2VudGl0bGVkIjogdHJ1ZSwK
ICAgICAgImlzX3RyaWFsIjogZmFsc2UKICAgIH0sCiAgICAic3Vic2NyaXB0aW9ucyI6IHsKICAg
ICAgImlzX2VudGl0bGVkIjogdHJ1ZSwKICAgICAgImlzX3RyaWFsIjogZmFsc2UKICAgIH0sCiAg
ICAidXNlcl9wcmVmZXJlbmNlcyI6IHsKICAgICAgImlzX2VudGl0bGVkIjogdHJ1ZSwKICAgICAg
ImlzX3RyaWFsIjogZmFsc2UKICAgIH0KICB9LAogICJpZGVudGl0eSI6IHsKICAgICJhY2NvdW50
X251bWJlciI6ICIxMjMiLAogICAgImF1dGhfdHlwZSI6ICJjZXJ0LWF1dGgiLAogICAgImludGVy
bmFsIjogewogICAgICAiYXV0aF90aW1lIjogOTAwLAogICAgICAiY3Jvc3NfYWNjZXNzIjogZmFs
c2UsCiAgICAgICJvcmdfaWQiOiAiMzIxIgogICAgfSwKICAgICJvcmdfaWQiOiAiMzIxIiwKICAg
ICJzeXN0ZW0iOiB7CiAgICAgICJjZXJ0X3R5cGUiOiAic3lzdGVtIiwKICAgICAgImNuIjogImM4
N2RjYjRjLThhZjEtNDBkZC04NzhlLTYwYzc0NGVkZGRkMCIKICAgIH0sCiAgICAidHlwZSI6ICJT
eXN0ZW0iCiAgfQp9Cg==
X-Rh-Insights-Request-Id: kjasdf02
X-Rh-Idm-Registration-Token: Iesah0IengaeFah6Cienai4tooph5Eiv

{
    "servers": [
        {
            "fqdn": "ipaserver.mydomain.example",
            "rhsm_id": "547ce70c-9eb5-4783-a619-086aa26f88e5",
            "ca_server": true,
            "hcc_enrollment_server": true,
            "pkinit_server": true
        }
    ],
    "ca_certs": [
        {
            "nickname": "MYDOMAIN.EXAMPLE IPA CA",
            "issuer": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
            "subject": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
            "serial_number": "1",
            "not_valid_before": "2023-01-31T13:23:36",
            "not_valid_after": "2023-01-31T13:23:36",
            "pem": "-----BEGIN CERTIFICATE-----\nMII...\n-----END CERTIFICATE-----\n",
        }
    ],
    "realm_domains": [
        "ipahcc.test"
    ]
}
end note
hmsidm_backend -> rbac: (http) GET /api/rbac/v1/access/?application=hmsidm&offset=0&limit=100
hmsidm_backend <-- rbac: (http) ACL list for the current user

alt IPA data updated
ipa_server <-- hmsidm_backend: (https) 200 Ok
note right ipa_server
{
    "realm_name": "MYDOMAIN.EXAMPLE",
    "servers": [
        {
            "fqdn": "ipaserver.mydomain.example",
            "rhsm_id": "547ce70c-9eb5-4783-a619-086aa26f88e5",
            "ca_server": true,
            "hcc_enrollment_server": true,
            "pkinit_server": true
        }
    ],
    "ca_certs": [
        {
            "nickname": "MYDOMAIN.EXAMPLE IPA CA",
            "issuer": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
            "subject": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
            "serial_number": "1",
            "not_valid_before": "2023-01-31T13:23:36",
            "not_valid_after": "2023-01-31T13:23:36",
            "pem": "-----BEGIN CERTIFICATE-----\nMII...\n-----END CERTIFICATE-----\n"
        }
    ],
    "realm_domains": [
        "mydomain.example"
    ]
}
end note
note right ipa_server
At this point, the IPA section for the domain is filled up
end note

else RBAC validation: no 'hmsidm:domains_ipa:write' permission found
ipa_server <-- hmsidm_backend: (https) 404 Not Found (401 Unauthorized)

else Fail one time token validation
note right ipa_server
Token validation fails if:
- Token is nil into the IPA section.
- Expiration token timestamp is nil into the API section.
- Token provided does not match.
- Token is outdated (expiration date).
end note
note right ipa_server
QUESTION: Should the token be set to null?
end note
ipa_server <-- hmsidm_backend: (https) 404 Not Found (401 Unauthorized)
end alt
end group

@enduml
