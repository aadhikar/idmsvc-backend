---
image: golang:1.18

stages:
  - check
  - test
  - build

check missed commits:
  stage: check
  tags:
    - shared
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - apt-get update
    - apt-get install -y python3-venv python3-pip
    - pip install --user yamllint
  script:
    - make install-oapi-codegen
    - make install-mockery
    # - make install-golangci-lint
    # - make install-gojsonschema
    # - make install-goda
    - make install-yq

    # - echo "Checking missed 'make tidy'"
    # - make tidy && git diff --exit-code go.mod go.sum
    - echo "get dependencies"
    - go get ./...

    - echo "Checking missed 'make openapi-sort'"
    - make openapi-sort && git diff --exit-code api/

    - echo "Checking missed 'make generate-api'"
    - make generate-api && git diff --exit-code internal/api/public/

    - echo "Checking missed 'make generate-mock'"
    - make generate-mock && git diff --exit-code internal/test/mock/

    - echo "Checking missed 'go fmt'"
    - make go-fmt && git diff --exit-code .

    - echo "Checking yaml files"
    - python3 -m yamllint .

run tests:
  stage: test
  tags:
    - shared
  needs: []
  script:
    - go vet $(go list ./... | grep -v /vendor/)
    - make test
    - go get github.com/boumenot/gocover-cobertura
    - go run github.com/boumenot/gocover-cobertura < coverage.out > coverage.xml
    - go tool cover -func ./coverage.out
  coverage: '/total:\s+\(statements\)(?:\s+)?(\d+(?:\.\d+)?%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

compile project:
  stage: build
  tags:
    - shared
  needs: ["run tests"]
  script:
    - make build
