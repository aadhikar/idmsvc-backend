// Package public provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package public

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"DNosM/X8a4vDohgW/w0AAP//3mW8mv0dAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
