// Code generated by mockery v2.16.0. DO NOT EDIT.

package client

import (
	client "github.com/hmsidm/internal/interface/client"
	mock "github.com/stretchr/testify/mock"
)

// HostInventory is an autogenerated mock type for the HostInventory type
type HostInventory struct {
	mock.Mock
}

// ListHost provides a mock function with given fields: iden
func (_m *HostInventory) ListHost(iden string) ([]client.Host, error) {
	ret := _m.Called(iden)

	var r0 []client.Host
	if rf, ok := ret.Get(0).(func(string) []client.Host); ok {
		r0 = rf(iden)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]client.Host)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(iden)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewHostInventory interface {
	mock.TestingT
	Cleanup(func())
}

// NewHostInventory creates a new instance of HostInventory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHostInventory(t mockConstructorTestingTNewHostInventory) *HostInventory {
	mock := &HostInventory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
