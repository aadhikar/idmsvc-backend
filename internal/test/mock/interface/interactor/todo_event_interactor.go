// Code generated by mockery v2.16.0. DO NOT EDIT.

package interactor

import (
	event "github.com/hmsidm/internal/api/event"

	mock "github.com/stretchr/testify/mock"

	model "github.com/hmsidm/internal/domain/model"
)

// TodoEventInteractor is an autogenerated mock type for the TodoEventInteractor type
type TodoEventInteractor struct {
	mock.Mock
}

// TodoCreated provides a mock function with given fields: in, out
func (_m *TodoEventInteractor) TodoCreated(in *event.TodoCreatedEvent, out *model.Todo) error {
	ret := _m.Called(in, out)

	var r0 error
	if rf, ok := ret.Get(0).(func(*event.TodoCreatedEvent, *model.Todo) error); ok {
		r0 = rf(in, out)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewTodoEventInteractor interface {
	mock.TestingT
	Cleanup(func())
}

// NewTodoEventInteractor creates a new instance of TodoEventInteractor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTodoEventInteractor(t mockConstructorTestingTNewTodoEventInteractor) *TodoEventInteractor {
	mock := &TodoEventInteractor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
