// Code generated by mockery v2.16.0. DO NOT EDIT.

package middleware

import (
	identity "github.com/redhatinsights/platform-go-middlewares/identity"

	mock "github.com/stretchr/testify/mock"
)

// IdentityPredicate is an autogenerated mock type for the IdentityPredicate type
type IdentityPredicate struct {
	mock.Mock
}

// Execute provides a mock function with given fields: data
func (_m *IdentityPredicate) Execute(data *identity.Identity) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(*identity.Identity) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIdentityPredicate interface {
	mock.TestingT
	Cleanup(func())
}

// NewIdentityPredicate creates a new instance of IdentityPredicate. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIdentityPredicate(t mockConstructorTestingTNewIdentityPredicate) *IdentityPredicate {
	mock := &IdentityPredicate{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
