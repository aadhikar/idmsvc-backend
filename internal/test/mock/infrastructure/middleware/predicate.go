// Code generated by mockery v2.16.0. DO NOT EDIT.

package middleware

import mock "github.com/stretchr/testify/mock"

// Predicate is an autogenerated mock type for the Predicate type
type Predicate struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *Predicate) Execute(_a0 interface{}) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewPredicate interface {
	mock.TestingT
	Cleanup(func())
}

// NewPredicate creates a new instance of Predicate. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPredicate(t mockConstructorTestingTNewPredicate) *Predicate {
	mock := &Predicate{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
